apt-cache policy cuda

incase of version missmatch betteen nvidia driver version and cuda suggested driver version 
just uninstall nvidia driver and use cuda to build nvidia driver

In case of using tensorflow 2, use following code to allow gpu growth

from tensorflow.compat.v1 import ConfigProto
from tensorflow.compat.v1 import InteractiveSession

config = ConfigProto()
config.gpu_options.allow_growth = True
session = InteractiveSession(config=config)

sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
sudo ldconfig

How to make eclipse work ->
edit eclipse.ini
------------------------------
-vm 
/usr/lib/jvm/java-8-openjdk-amd64/bin/java
-vmargs
-Dosgi.requiredJavaVersion=1.8

How to install tensorflow from source 
1. Use https://www.tensorflow.org/install/gpu to install
	CUDA
	CUDNN
	TensorRT

2. Update ~/.bashrc:
	export PATH=$PATH:/usr/local/cuda-11.0/bin
	export LD_LIBRARY_PATH=/usr/local/cuda-11.0/targets/x86_64-linux/lib


	export CUDNN_INSTALL_PATH=/usr/local/cuda-11.0
	export CUDA_HOME=/usr/local/cuda-11.0

	# set PATH for cuda 11.0 installation
	if [ -d "/usr/local/cuda-11.0/bin/" ]; then
	    export PATH=/usr/local/cuda-11.0/bin${PATH:+:${PATH}}
	    export LD_LIBRARY_PATH=/usr/local/cuda-11.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
	fi

3. cd tensorflow -> ./configure
4. bazel build [--config=option] //tensorflow/tools/pip_package:build_pip_package


